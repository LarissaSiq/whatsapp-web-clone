{"version":3,"sources":["components/ChatListItem/index.js","components/ChatIntro/index.js","components/MessageItem/index.js","services/firebaseConfig.js","services/Api.js","components/ChatWindow/index.js","components/NewChat/index.js","components/Login/index.js","App.js","index.js"],"names":["ChatListItem","onClick","active","data","useState","time","setTime","useEffect","lastMessageDate","d","Date","seconds","hours","getHours","minutes","getMinutes","className","src","image","alt","title","lastMessage","ChatIntro","MessageItem","user","date","style","justifyContent","id","author","backgroundColor","body","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firebase","initializeApp","firestore","googlePopUp","a","provider","auth","GoogleAuthProvider","signInWithPopup","addUser","collection","doc","set","name","avatar","merge","getContactList","userId","list","get","forEach","result","push","addNewChat","user2","add","messages","users","newChat","update","chats","FieldValue","arrayUnion","chatId","with","onChatList","setChatList","onSnapshot","exists","sort","b","undefined","onChatContent","setList","setUsers","sendMessage","chatData","type","now","i","u","uData","e","ChatWindow","useRef","emojiOpen","setEmojiOpen","text","setText","Api","current","scrollHeight","offsetHeight","scrollTop","handleSendClick","color","ref","map","item","key","height","onEmojiClick","emojiObject","emoji","disableSearchBar","disableSkinTonePicker","width","value","onChange","target","onKeyUp","keyCode","placeholder","NewChat","show","chatlist","setShow","getList","results","handleClose","left","Login","onReceive","handleLogin","alert","href","App","chatList","activeChat","setActiveChat","setUser","showNewChat","setShowNewChat","handleLoginData","newUser","uid","displayName","photoURL","fontSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2406eee.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './index.css';\r\n\r\nexport function ChatListItem({\r\n    onClick,\r\n    active,\r\n    data\r\n}) {\r\n    const [time, setTime] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (data.lastMessageDate > 0) {\r\n            let d = new Date(data.lastMessageDate.seconds * 1000)\r\n            let hours = d.getHours();\r\n            let minutes = d.getMinutes();\r\n            hours = hours < 10 ? '0' + hours : hours;\r\n            minutes = minutes < 10 ? '0' + minutes : minutes;\r\n            setTime(`${hours}:${minutes}`);\r\n        }\r\n    }, [data])\r\n    return (\r\n        <div className={`chatListItem ${active ? 'active' : ''}`} onClick={onClick} >\r\n            <img className=\"chatListItem--avatar\" src={data.image} alt=\"user-avatar\" />\r\n            <div className=\"chatListItem--lines\">\r\n                <div className=\"chatListItem--line\">\r\n                    <div className=\"chatListItem--name\">{data.title}</div>\r\n                    <div className=\"chatListItem--date\">{time}</div>\r\n                </div>\r\n                <div className=\"chatListItem--line\">\r\n                    <div className=\"chatListItem--lastMsg\">\r\n                        <p>{data.lastMessage}</p>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatListItem;","import React from \"react\";\r\nimport './index.css'\r\n\r\nexport function ChatIntro() {\r\n    return (\r\n        <div className=\"chatIntro\">\r\n            <img src=\"https://conteudo.imguol.com.br/c/noticias/2015/01/23/logo-whatsapp-whatsapp-na-web-1422023070243_615x300.jpg\" alt=\"\" />\r\n            <h1>Mantenha seu celular conectado.</h1>\r\n            <h2>O Whatsapp conecta ao seu telefone para sincronizar suas mensagens.\r\n                <br />Para reduzir o uso de dados, conecte seu telefone a uma rede Wi-Fi.\r\n            </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatIntro;","import React, { useState, useEffect } from \"react\";\r\nimport './index.css';\r\n\r\nexport function MessageItem({\r\n    data,\r\n    user\r\n}) {\r\n    const [time, setTime] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (data.date > 0) {\r\n            let d = new Date(data.date.seconds * 1000)\r\n            let hours = d.getHours();\r\n            let minutes = d.getMinutes();\r\n            hours = hours < 10 ? '0' + hours : hours;\r\n            minutes = minutes < 10 ? '0' + minutes : minutes;\r\n            setTime(`${hours}:${minutes}`);\r\n        }\r\n    }, [data]);\r\n\r\n    return (\r\n        <div className=\"messageLine\"\r\n            style={{ justifyContent: user.id === data.author ? \"flex-end\" : \"flex-start\" }}>\r\n            <div className=\"messageItem\"\r\n                style={{ backgroundColor: user.id === data.author ? '#DCF8C6' : '#fff' }}>\r\n                <div className=\"messageText\">{data.body}</div>\r\n                <div className=\"messageDate\">{time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","const firebaseConfig = {\r\n    apiKey: \"AIzaSyDZSSDKsUSXWoRLGOHwUNHfmDom3wMFFE0\",\r\n    authDomain: \"whatsapp-clone-larissasiq.firebaseapp.com\",\r\n    projectId: \"whatsapp-clone-larissasiq\",\r\n    storageBucket: \"whatsapp-clone-larissasiq.appspot.com\",\r\n    messagingSenderId: \"401559125888\",\r\n    appId: \"1:401559125888:web:8286f88ef64776b01dcb65\"\r\n};\r\n\r\nexport default firebaseConfig;","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    googlePopUp: async () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        return firebase\r\n            .auth()\r\n            .signInWithPopup(provider);\r\n    },\r\n    addUser: async (user) => {\r\n        await db.collection('users').doc(user.id).set({\r\n            name: user.name,\r\n            avatar: user.avatar,\r\n        }, { merge: true });\r\n    },\r\n    getContactList: async (userId) => {\r\n        let list = [];\r\n        let results = await db.collection('users').get();\r\n        results.forEach(result => {\r\n            let data = result.data();\r\n            if (result.id !== userId) {\r\n                list.push({\r\n                    id: result.id,\r\n                    name: data.name,\r\n                    avatar: data.avatar\r\n                });\r\n            }\r\n        });\r\n        return list;\r\n    },\r\n    addNewChat: async (user, user2) => {\r\n        let newChat = await db.collection('chats').add({\r\n            messages: [],\r\n            users: [user.id, user2.id]\r\n        });\r\n        db.collection('users').doc(user.id).update({\r\n            chats: firebase.firestore.FieldValue.arrayUnion({\r\n                chatId: newChat.id,\r\n                title: user2.name,\r\n                image: user2.avatar,\r\n                with: user2.id\r\n            })\r\n        });\r\n        db.collection('users').doc(user2.id).update({\r\n            chats: firebase.firestore.FieldValue.arrayUnion({\r\n                chatId: newChat.id,\r\n                title: user.name,\r\n                image: user.avatar,\r\n                with: user.id\r\n            })\r\n        })\r\n    },\r\n    onChatList: (userId, setChatList) => {\r\n        return db.collection('users').doc(userId).onSnapshot((doc) => {\r\n            if (doc.exists) {\r\n                let data = doc.data();\r\n                if (data.chats) {\r\n                    let chats = [...data.chats];\r\n                    chats.sort((a, b) => {\r\n                        if (a.lastMessageDate === undefined) {\r\n                            return -1;\r\n                        }\r\n                        if (b.lastMessageDate === undefined) {\r\n                            return -1;\r\n                        }\r\n                        if (a.lastMessageDate.seconds < b.lastMessageDate.seconds) {\r\n                            return 1;\r\n                        }\r\n                        else {\r\n                            return -1;\r\n                        }\r\n                    })\r\n                    setChatList(chats);\r\n                }\r\n            }\r\n        });\r\n    },\r\n    onChatContent: (chatId, setList, setUsers) => {\r\n        return db.collection('chats').doc(chatId).onSnapshot((doc) => {\r\n            if (doc.exists) {\r\n                let data = doc.data();\r\n                setList(data.messages);\r\n                setUsers(data.users)\r\n            }\r\n        })\r\n    },\r\n    sendMessage: async (chatData, userId, type, body, users) => {\r\n        let now = new Date();\r\n        db.collection('chats').doc(chatData.chatId).update({\r\n            messages: firebase.firestore.FieldValue.arrayUnion({\r\n                type,\r\n                author: userId,\r\n                body,\r\n                date: now,\r\n            })\r\n        });\r\n\r\n        for (let i in users) {\r\n            let u = await db.collection('users').doc(users[i]).get();\r\n            let uData = u.data();\r\n            if (uData.chats) {\r\n                let chats = [...uData.chats];\r\n\r\n                for (let e in chats) {\r\n                    if (chats[e].chatId === chatData.chatId) {\r\n                        chats[e].lastMessage = body;\r\n                        chats[e].lastMessageDate = now;\r\n                    }\r\n                }\r\n                await db.collection('users').doc(users[i]).update({\r\n                    chats\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './index.css';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport InsertEmoticonIcon from '@mui/icons-material/InsertEmoticon';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport MessageItem from '../MessageItem/index';\r\nimport Api from '../../services/Api';\r\n\r\nexport function ChatWindow({\r\n    user,\r\n    data\r\n}) {\r\n\r\n    const body = useRef();\r\n    const [emojiOpen, setEmojiOpen] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [list, setList] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setList([]);\r\n        let unsub = Api.onChatContent(data.chatId, setList, setUsers);\r\n        return unsub;\r\n    }, [data.chatId]);\r\n\r\n    useEffect(() => {\r\n        if (body.current.scrollHeight > body.current.offsetHeight) {\r\n            body.current.scrollTop = body.current.scrollHeight - body.current.offsetHeight\r\n        }\r\n    }, [list]);\r\n\r\n    const handleEmojiClick = (e, emojiObject) => {\r\n        setText(text + emojiObject.emoji)\r\n    }\r\n    const handleOpenEmoji = () => {\r\n        setEmojiOpen(true);\r\n    }\r\n\r\n    const handleCloseEmoji = () => {\r\n        setEmojiOpen(false);\r\n    }\r\n    const handleSendClick = () => {\r\n        if (text !== '') {\r\n            Api.sendMessage(data, user.id, 'text', text, users);\r\n            setText('');\r\n            setEmojiOpen(false);\r\n        }\r\n    }\r\n    const handleInputKeyUp = (e) => {\r\n        if (e.keyCode === 13) {\r\n            handleSendClick();\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"chatWindow\">\r\n            <div className=\"chatWindow--header\">\r\n                <div className=\"chatWindow--header--info\">\r\n                    <img className=\"chatWindow--avatar\" src={data.image} alt=\"user-avatar\" />\r\n                    <div className=\"chatWindow--name\">{data.title}</div>\r\n                </div>\r\n                <div className=\"chatWindow--header--btn\">\r\n                    <div className=\"chatWindow--btn\">\r\n                        <SearchIcon style={{ color: '919191' }} />\r\n                    </div>\r\n                    <div className=\"chatWindow--btn\">\r\n                        <AttachFileIcon style={{ color: '919191' }} />\r\n                    </div>\r\n                    <div className=\"chatWindow--btn\">\r\n                        <MoreVertIcon style={{ color: '919191' }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div ref={body} className=\"chatWindow--body\">\r\n                {list.map((item, key) => (\r\n                    <MessageItem key={key} data={item} user={user} />\r\n                ))}\r\n            </div>\r\n            <div className=\"chatWindow--emoji-area\" style={{\r\n                height: emojiOpen ? '200px' : '0px'\r\n            }}>\r\n                <EmojiPicker\r\n                    onEmojiClick={handleEmojiClick}\r\n                    disableSearchBar\r\n                    disableSkinTonePicker />\r\n            </div>\r\n            <div className=\"chatWindow--footer\">\r\n                <div className=\"chatWindow--pre\">\r\n                    <div className=\"chatWindow--btn\" onClick={handleCloseEmoji}\r\n                        style={{ width: emojiOpen ? 40 : 0 }}>\r\n                        <CloseIcon style={{ color: '#919191' }} />\r\n                    </div>\r\n                    <div className=\"chatWindow--btn\" onClick={handleOpenEmoji}>\r\n                        <InsertEmoticonIcon style={{ color: emojiOpen ? '#009688' : '#919191' }} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"chatWindow--input--area\">\r\n                    <input className=\"chatWindow--input\" value={text}\r\n                        onChange={e => setText(e.target.value)}\r\n                        onKeyUp={handleInputKeyUp}\r\n                        type=\"text\" placeholder=\"Digite uma mensagem\" />\r\n                </div>\r\n                <div className=\"chatWindow--pos\">\r\n                    <div className=\"chatWindow--btn\">\r\n                        <SendIcon onClick={handleSendClick} style={{ color: '#919191' }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatWindow;","import React, { useState, useEffect } from 'react';\r\nimport './index.css';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport Api from '../../services/Api';\r\n\r\nexport function NewChat({\r\n    user,\r\n    chatlist,\r\n    show,\r\n    setShow\r\n}) {\r\n\r\n    const [list, setList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            if (user !== null) {\r\n                let results = await Api.getContactList(user.id);\r\n                setList(results)\r\n            };\r\n        };\r\n        getList();\r\n    }, [user]);\r\n\r\n    const addNewChat = async (user2) => {\r\n        await Api.addNewChat(user, user2);\r\n        handleClose();\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"newChat\" style={{ left: show ? 0 : -415 }}>\r\n            <div className=\"newChat--head\">\r\n                <div onClick={handleClose} className=\"newChat--backbutton\">\r\n                    <ArrowBackIcon style={{ color: 'fff' }} />\r\n                </div>\r\n                <div className=\"newChat--headtitle\">Nova Conversa</div>\r\n            </div>\r\n            <div className=\"newChat--list\">\r\n                {list.map((item, key) => (\r\n                    <div onClick={() => addNewChat(item)} className=\"newChat--item\" key={key}>\r\n                        <img className=\"newChat--item--avatar\" src={item.avatar} alt=\"user-avatar\" />\r\n                        <div className=\"newChat--item--name\">{item.name}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewChat;","import './index.css';\r\nimport Api from '../../services/Api';\r\n\r\nexport function Login({\r\n    onReceive\r\n}) {\r\n    const handleLogin = async () => {\r\n        let result = await Api.googlePopUp()\r\n        if (result) {\r\n            onReceive(result.user);\r\n        } else {\r\n            alert(\"Error!\");\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login--form-container\">\r\n                <h1 className=\"login--h1\">Whatsapp Web</h1>\r\n                <fieldset className=\"login--fieldset\">\r\n                    <button className=\"login--btn\" onClick={handleLogin}>\r\n                        <img className=\"logo-google\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/25px-Google_%22G%22_Logo.svg.png\" alt=\"img-google\" />\r\n                        Entre com uma conta Google\r\n                    </button>\r\n                </fieldset>\r\n            </div>\r\n            <footer>\r\n                <p>copyright @2021 | feito por <a className=\"link\" href=\"https://github.com/LarissaSiq\"\r\n                    target=\"blank\">\r\n                    Larissa Siqueira\r\n                </a></p></footer>\r\n        </div >\r\n\r\n    );\r\n}\r\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport DonutLargeIcon from '@mui/icons-material/DonutLarge';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ChatListItem from './components/ChatListItem/index';\nimport ChatIntro from './components/ChatIntro/index';\nimport ChatWindow from './components/ChatWindow/index';\nimport NewChat from './components/NewChat/index';\nimport Login from './components/Login/index';\nimport Api from './services/Api';\n\nfunction App() {\n\n  const [chatList, setChatList] = useState([]);\n  const [activeChat, setActiveChat] = useState({});\n  const [user, setUser] = useState(null);\n  const [showNewChat, setShowNewChat] = useState(false);\n\n  useEffect(() => {\n    if (user !== null) {\n      let unsub = Api.onChatList(user.id, setChatList);\n      return unsub\n    }\n  }, [user])\n  const handleNewChat = () => {\n    setShowNewChat(true)\n  };\n\n  const handleLoginData = async (user) => {\n    let newUser = {\n      id: user.uid,\n      name: user.displayName,\n      avatar: user.photoURL\n    };\n    await Api.addUser(newUser);\n    setUser(newUser);\n  }\n  if (user === null) {\n    return (< Login onReceive={handleLoginData} />);\n  }\n\n  return (\n    <div className=\"app-window\">\n      <div className=\"sidebar\">\n        <NewChat chatlist={chatList} user={user} show={showNewChat} setShow={setShowNewChat} />\n        <header>\n          <img className=\"header--avatar\" src={user.avatar} alt=\"user-avatar\" />\n          <div className=\"header--btn\">\n            <div className=\"header--btn--area\">\n              <DonutLargeIcon style={{ color: '#919191' }} />\n            </div>\n            <div onClick={handleNewChat} className=\"header--btn--area\">\n              <ChatIcon style={{ color: '#919191' }} />\n            </div>\n            <div className=\"header--btn--area\">\n              <MoreVertIcon style={{ color: '#919191' }} />\n            </div>\n          </div>\n        </header>\n        <div className=\"search\">\n          <div className=\"search--input\">\n            <SearchIcon style={{ color: '#919191', fontSize: '24px' }} />\n            <input type=\"search\" placeholder=\"Procurar ou começar uma nova conversa\" />\n          </div>\n        </div>\n        <div className=\"chatlist\">\n          {chatList.map((item, key) => (\n            <ChatListItem\n              key={key}\n              data={item}\n              active={activeChat.chatId === chatList[key].chatId}\n              onClick={() => setActiveChat(chatList[key])}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"content-area\">\n        {activeChat.chatId !== undefined &&\n          <ChatWindow user={user}\n            data={activeChat} />\n        }\n        {activeChat.chatId === undefined &&\n          <ChatIntro />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}